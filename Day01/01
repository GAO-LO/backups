JDK（开发工具包）
JRE（运行环境）运行时类库，没有编译功能
JVM（java虚拟机）实现跨平台操作
JDK中包含JRE，JRE中包含JVM。

java命名规范：
           标识符命名规则：
                                 数字、字母、下划线、&
                                不能以数字开头
                                中文不建议使用
                                不能使用保留字
                                严格区分大小小写      
                                见名知意！                 
           不同标识符的命名规则：
		        包名，多单词组成时所有字母都要小写   xxxxyyy
		        类名、接口名，所要单词首写要大写   XxxYyy帕斯卡命名法
		        变量名、方法名，第一个字母要小写   xxxYyy驼峰命名法
		        常量名。所有字母都要大写   XXX_YY，不同字母之间用_连接
                   	
 

变量：内存中的一个存储区域
	该区域的数据可以再同一类型范围内不断变化
	变量是程序中最基本的存储单元，包含变量类型、变量名称和存储的值
	
	变量：声明+初始化
	注意：
	Java中每个变量必须声明，后使用
	使用变量名来访问这块区域的变量
变量的作用：
	用来储存数据






1、环境变量
	Java_HOME 
	jDK路径
	path：要把jdk的bin目录路径，添加到path变量
2、八种数据类型
	引用数据类型：数组、类、接口
  2.1char :Unicode编码的字符，或字符的整数编码,必须用单引号
     float默认值是0.0f；
     double默认值是0.0d；
  2.2基本类型字面值规则
               基本数据类型：
               整型：byte(1)、short(2)、int(4)、long(8)
               浮点型：float(4)、double(8)
               布尔型：boolean(1)
               字符型：char(2)
     
     	字符型： byte -128~127         
       	短整型：short -32768~32767
       	整型：int  -121次方~2的31次方-1
       	长整型：long
       	单精度浮点型：float   1.4013E~3.4028E+38
       	双精度浮点型：double    4.9E-324~1.7977E+38
       	字符型：char    0-65535
       	布尔类型：boolean       
               
               
               
               
               
               整数字面值是int类型，如果右侧赋值超出int范围，需要做转型处理。
     byte、short、char三种比int小的整数，在自身范围内可以直接赋值。
     byte d=1+3正确，1+3编译器会自动转成4
               浮点数字面值是double；浮点数转成整数会直接舍弃小数点后位数
               字面值后缀，L D F
               字面值前缀 ob 二进制、ox 十六进制、0 八进制、\u char类型16进制
  2.3基本类型的运算规则
               按精度有小到大：byte、short、(char)、int、long、float、double
               自动转换： 小---->大
               强制转换： 大---->小
             	  格式：（要转换的数据类型）数据
               计算结果的数据类型与运算中的最大类型一致
     byte、short、char三种比int小的整数，计算会自动转换成int。做加法运算时
      数据类型会自动转换成int，除了自增加自减不进行转化外，其他情况都是无long型时，所有
      非int类型转成int类型；有long类型时，都转成long类型。  char类型相加，提升为int
      类型
              整数运算溢出。Infinity整数除以0；Nan负数开方
  2.4基本数据类型的转换
             数字类型之间可以互相转换，从小到大自动转换，从大到小需要强制转换。
    double d = 245; float d = 100;自动转换
  2.5运算符
            算术运算符、逻辑运算符、赋值运算符、关系运算符、三目运算、位运算符
    ++、--：在单独使用的时候，放在前后没有啥区别
                                被使用时：++在前，先自增在运算
                 ++在后 ，先运算后自增                     
            关系运算符：结果都是boolean型，要么是true，要么是false        
            三目运算符：
                                  条件表达式？表达式一：表达式二      ？前面表达式为布尔类型
		   true---->执行表达式一
		   false--->执行表达式二
		         表达式1 2类型要一致        
            逻辑运算符：&逻辑与        |逻辑或       !逻辑非        &&短路与          ||短路或           ^逻辑异或
    & &&当且仅当两个操作数都为真，条件才为真
                        当&&第一个表达式结果为假时，后面不再执行
                        当&第一个表达式结果为假时，后面会执行 
           如果任何两个操作数任何一个为真，条件为真                  
                       当||第一个表达式结果为真时，后面不再执行
                       当|第一个表达式结果为真时，后面会执行


	1、byte,short,char之间不会互相转换
            2、引用数据类型:String、数组、类、接口、枚举、注解


		 * 运算符：
		 * 算术运算符
		 *    + - * / ++ --
		 * 关系运算符
		 *    > < = >= <= == !=
		 * 逻辑运算符
		 *    & | ^（逻辑异或）
		 *    && || !（非真既假，非假既真）
		 *    & && (短路逻辑)一假即假
		 *    | || (短路逻辑)一假即真
		 * 赋值运算符
		 *    += -= *= /= %= =
		 *    a+=19.8  //a=(int)+(19.8)
		 *               不会改变变量的数据类型           
		 * 三元运算符
		 *               条件表达式？表达式1：表达式2    //（double）
		 *               表达式类型要一致
		 *    4>2?'a':12  //'a'
		 *    4>2?'a':-12  //97
		 * 字符串连接符
		 *    +



	        